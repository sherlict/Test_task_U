with 
table1 as (
  select 
        user_pseudo_id || cast((select value.int_value
                            from e.event_params 
                            where key = 'ga_session_id') as string) as unique_customer,
        array_agg(struct(event_name, 
                         (select replace(value.string_value, 'https://shop.googlemerchandisestore.com/', '')
                         from unnest(e.event_params) 
                         where key = 'page_location') as page_location, 
                         items.item_name)) as events
  from `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_*` e, 
  unnest(event_params) as event_params,
  unnest(items) as items
  where _table_suffix between '20200101' and '20201231' 
        and event_name in ('first_visit', 'select_item', 'view_item', 'view_promotion', 'add_to_cart', 'add_shipping_info', 'add_payment_info', 'purchase')
        and item_name <> '(not set)'
  group by unique_customer
),
table2 as (
select distinct
         unique_customer,
         event.event_name,
         event.page_location,
         event.item_name
from table1, unnest(events) as event
),
table3 as(
select 
      unique_customer,
      string_agg(page_location, ' >>> ' order by event_order) as page_location_chain,
      item_name
from (
      select
            unique_customer,
            page_location,
            event_name,
            item_name,
            row_number() over(partition by unique_customer, item_name order by 
                                        case event_name 
                                        when 'first_visit' then 1
                                        when 'select_item' then 2
                                        when 'view_item' then 3
                                        when 'view_promotion' then 4
                                        when 'add_to_cart' then 5
                                        when 'add_shipping_info' then 6
                                        when 'add_payment_info' then 7
                                        when 'purchase' then 8
                                        end) as event_order,
            countif(event_name = 'purchase') over(partition by unique_customer, item_name) as purchase_count
       from table2 as event
) as filtered_events
where purchase_count > 0
group by unique_customer, item_name
order by unique_customer, item_name
)
select item_name,
       page_location_chain,
       count(unique_customer) as count_chain
from table3
group by item_name, page_location_chain
order by count_chain desc
